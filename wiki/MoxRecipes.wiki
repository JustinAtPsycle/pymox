#summary Some useful patterns for using Mox to test code.
#labels Featured

= Introduction =

Here we provide some common Mox recipes that people have found useful. This section's constantly under development; if you find a better way of implementing a recipe below, please let us know in the comments.

== Set up your Mox test classes in a sane way ==

Note: many other recipes assume you've done this.

{{{
  def setUp(self):
    self.mox = mox.Mox()

  def tearDown(self):
    self.mox.UnsetStubs()
}}}

== Stub out a method called from a constructor in the same class ==

TODO(damien): Write a public example here.

== Stub out a static method in the class under test ==

{{{
  def testFoo(self):

    orig_method = module.class.StaticMethod

    static_stub = staticmethod(lambda *args, **kwargs: None)
    module.class.StaticMethod = static_stub

    self.mox.ReplayAll()

    ...

    self.mox.VerifyAll()

    module.class.StaticMethod = orig_method
}}}

== Mock a module-level function in a different module ==

{{{
  def testFoo(self):

    self.mox.StubOutWithMock(module_to_mock, 'FunctionToMock')
    module_to_mock.FunctionToMock().AndReturn(foo)

    self.mox.ReplayAll()
    ...
    self.mox.VerifyAll()
}}}

== Stub out a class in a different module ==

TODO(damien): Write a public example here.


== Mock a method in the class under test. ==

TODO(damien): Investigate this further. Maybe stubbing out __call__ would help?

{{{
  def testFoo(self):

    # Note the difference: we instantiate the class *before* Replaying.
    foo_instance = module_under_test.ClassUnderTest()
    self.mox.StubOutWithMock(foo_instance, 'MethodToStub')
    foo_instance.MethodToStub().AndReturn('foo')

    ...

    self.mox.ReplayAll()
    ...
    self.mox.VerifyAll()
}}}

== Mock a generator in the class under test ==

{{{
  def testFoo(self):

    ...

    foo_instance = module_under_test.ClassUnderTest()
    self.mox.StubOutWithMock(foo_instance, 'GeneratorToStub')

    mygen = (x for x in [1, 2, 3])
    foo_instance.MethodToStub(mox.IsA(object)).AndReturn(mygen)

    ...

    self.mox.ReplayAll()

    ...

    self.mox.VerifyAll()
}}}